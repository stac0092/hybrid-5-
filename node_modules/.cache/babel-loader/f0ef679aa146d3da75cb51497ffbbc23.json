{"ast":null,"code":"var _jsxFileName = \"/Users/mackenziestack/Documents/code/react-hybrid-5/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport List from './components/list';\nimport NewList from './components/newList';\nimport { DBfirebaseConfig } from './Config/config';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.addList = this.addList.bind(this);\n    this.deleteList = this.deleteList.bind(this); //firebase config \n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(DBfirebaseConfig);\n    }\n\n    this.db = firebase.database().ref().child(\"list\");\n    this.state = {\n      list: []\n    };\n  }\n\n  componentWillMount() {\n    const oldList = this.state.list; //DataSnapshot , get key and content\n\n    this.db.on(\"child_added\", snap => {\n      oldList.push({\n        id: snap.key,\n        listItem: snap.val().listItem\n      }); //update state with new array\n\n      this.setState({\n        list: oldList\n      });\n    });\n    this.db.on(\"child_removed\", snap => {\n      for (let i = 0; i < oldList.length; i++) {\n        if (oldList[i].id === snap.key) {\n          oldList.splice(i, 1);\n        }\n\n        ;\n      }\n\n      this.setState({\n        list: oldList\n      });\n    });\n  }\n\n  addList(item) {\n    this.database.push().set({\n      listItem: item\n    });\n  }\n\n  deleteList() {\n    this.database.child().remove();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"listWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"listHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Things I've Hit with My Car\")), React.createElement(\"div\", {\n      className: \"listForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(NewList, {\n      addList: this.addList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"listBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.list.map(item => {\n      return React.createElement(List, {\n        listItems: item.listItem,\n        listID: item.id,\n        key: item.id,\n        deleteList: this.deleteList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mackenziestack/Documents/code/react-hybrid-5/src/App.js"],"names":["React","Component","List","NewList","DBfirebaseConfig","firebase","App","constructor","props","addList","bind","deleteList","apps","length","initializeApp","db","database","ref","child","state","list","componentWillMount","oldList","on","snap","push","id","key","listItem","val","setState","i","splice","item","set","remove","render","map"],"mappings":"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","sourcesContent":["import React , { Component }from 'react';\nimport './App.css';\nimport List from './components/list'\nimport NewList from './components/newList'\nimport { DBfirebaseConfig } from './Config/config'\nimport firebase from 'firebase/app'\nimport 'firebase/database'\n\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n    this.addList = this.addList.bind(this);\n    this.deleteList = this.deleteList.bind(this);\n\n    //firebase config \n\n  if (!firebase.apps.length) {\n     firebase.initializeApp(DBfirebaseConfig);\n   }\n   this.db = firebase.database().ref().child(\"list\");\n\n\n    this.state = {\n      list: [\n      ],\n    }\n  }\n\n  componentWillMount(){\n    const oldList = this.state.list;\n    //DataSnapshot , get key and content\n    this.db.on(\"child_added\", snap =>{\n      oldList.push({\n        id: snap.key,\n        listItem: snap.val().listItem,\n      })\n\n      //update state with new array\n      this.setState({\n        list: oldList\n      })\n    })\n\n    this.db.on(\"child_removed\", snap => {\n      for (let i = 0; i < oldList.length; i++) {\n        if(oldList[i].id === snap.key){\n          oldList.splice(i, 1);\n        };      \n      }\n      this.setState({\n        list: oldList\n      })\n    })\n  }\n\n  addList(item){\n    this.database.push().set({ listItem: item})\n  }\n\n  deleteList(){\n    this.database.child().remove();\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"listWrapper\">\n        <div className=\"listHeader\">\n          <h1>Things I've Hit with My Car</h1>\n        </div>\n          <div className=\"listForm\">\n          <NewList addList={this.addList}/>\n          </div>\n            <div className=\"listBody\">\n            {\n              this.state.list.map((item) => {\n                return(\n                  <List listItems={item.listItem} listID={item.id} key={item.id} deleteList={this.deleteList}/>\n                )\n\n              })\n            }\n            </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}