{"ast":null,"code":"var _jsxFileName = \"/Users/mackenziestack/Documents/code/react-hybrid-5/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport List from './components/list';\nimport NewList from './components/newList';\nimport { DBfirebaseConfig } from './Config/config';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.addList = this.addList.bind(this); //firebase config \n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(DBfirebaseConfig);\n    }\n\n    this.state = {\n      list: [{\n        id: 1,\n        listItem: \"Pole\"\n      }, {\n        id: 2,\n        listItem: \"Bird\"\n      }]\n    };\n  }\n\n  componentWillMount() {\n    this.db = this.app.database().ref().child(\"list\");\n    const oldList = this.setState.list; //DataSnapshot , get key and content\n\n    this.database.on(\"child_added\", snap => {\n      oldList.push({\n        id: snap.key,\n        listItem: snap.val().listItem\n      }); //update state with new array\n\n      this.setState({\n        list: oldList\n      });\n    });\n  }\n\n  addList(item) {\n    this.database.push().set({\n      listItem: item\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"listWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"listHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Things I've Hit with My Car\")), React.createElement(\"div\", {\n      className: \"listForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(NewList, {\n      addList: this.addList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"listBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.list.map(item => {\n      return React.createElement(List, {\n        listItems: item.listItem,\n        listID: item.id,\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mackenziestack/Documents/code/react-hybrid-5/src/App.js"],"names":["React","Component","List","NewList","DBfirebaseConfig","firebase","App","constructor","props","addList","bind","apps","length","initializeApp","state","list","id","listItem","componentWillMount","db","app","database","ref","child","oldList","setState","on","snap","push","key","val","item","set","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,mBAAP;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA2B;AAEzBM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf,CAFgB,CAIhB;;AAEA,QAAI,CAACL,QAAQ,CAACM,IAAT,CAAcC,MAAnB,EAA2B;AACzBP,MAAAA,QAAQ,CAACQ,aAAT,CAAuBT,gBAAvB;AACF;;AAEA,SAAKU,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CACJ;AAAEC,QAAAA,EAAE,EAAC,CAAL;AAASC,QAAAA,QAAQ,EAAE;AAAnB,OADI,EAEJ;AAAED,QAAAA,EAAE,EAAC,CAAL;AAAQC,QAAAA,QAAQ,EAAE;AAAlB,OAFI;AADK,KAAb;AAMD;;AAEDC,EAAAA,kBAAkB,GAAE;AAClB,SAAKC,EAAL,GAAU,KAAKC,GAAL,CAASC,QAAT,GAAoBC,GAApB,GAA0BC,KAA1B,CAAgC,MAAhC,CAAV;AACA,UAAMC,OAAO,GAAG,KAAKC,QAAL,CAAcV,IAA9B,CAFkB,CAIlB;;AACA,SAAKM,QAAL,CAAcK,EAAd,CAAiB,aAAjB,EAAgCC,IAAI,IAAG;AACrCH,MAAAA,OAAO,CAACI,IAAR,CAAa;AACXZ,QAAAA,EAAE,EAAEW,IAAI,CAACE,GADE;AAEXZ,QAAAA,QAAQ,EAAEU,IAAI,CAACG,GAAL,GAAWb;AAFV,OAAb,EADqC,CAMrC;;AACA,WAAKQ,QAAL,CAAc;AACZV,QAAAA,IAAI,EAAES;AADM,OAAd;AAGD,KAVD;AAWD;;AAEDf,EAAAA,OAAO,CAACsB,IAAD,EAAM;AAEX,SAAKV,QAAL,CAAcO,IAAd,GAAqBI,GAArB,CAAyB;AAAEf,MAAAA,QAAQ,EAAEc;AAAZ,KAAzB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,CADF,EAII;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKxB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAJJ,EAOM;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKK,KAAL,CAAWC,IAAX,CAAgBmB,GAAhB,CAAqBH,IAAD,IAAU;AAC5B,aACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEA,IAAI,CAACd,QAAtB;AAAgC,QAAA,MAAM,EAAEc,IAAI,CAACf,EAA7C;AAAiD,QAAA,GAAG,EAAEe,IAAI,CAACf,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAID,KALD,CAFF,CAPN,CADF;AAoBD;;AAhEwB;;AAoE3B,eAAeV,GAAf","sourcesContent":["import React , { Component }from 'react';\nimport './App.css';\nimport List from './components/list'\nimport NewList from './components/newList'\nimport { DBfirebaseConfig } from './Config/config'\nimport firebase from 'firebase/app'\nimport 'firebase/database'\n\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n    this.addList = this.addList.bind(this);\n\n    //firebase config \n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(DBfirebaseConfig);\n   }\n\n    this.state = {\n      list: [\n        { id:1 , listItem: \"Pole\"},\n        { id:2, listItem: \"Bird\"},\n      ],\n    }\n  }\n\n  componentWillMount(){\n    this.db = this.app.database().ref().child(\"list\");\n    const oldList = this.setState.list;\n\n    //DataSnapshot , get key and content\n    this.database.on(\"child_added\", snap =>{\n      oldList.push({\n        id: snap.key,\n        listItem: snap.val().listItem,\n      })\n\n      //update state with new array\n      this.setState({\n        list: oldList\n      })\n    })\n  }\n\n  addList(item){\n\n    this.database.push().set({ listItem: item})\n  }\n\n  render() {\n    return (\n      <div className=\"listWrapper\">\n        <div className=\"listHeader\">\n          <h1>Things I've Hit with My Car</h1>\n        </div>\n          <div className=\"listForm\">\n          <NewList addList={this.addList}/>\n          </div>\n            <div className=\"listBody\">\n            {\n              this.state.list.map((item) => {\n                return(\n                  <List listItems={item.listItem} listID={item.id} key={item.id}/>\n                )\n\n              })\n            }\n            </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}